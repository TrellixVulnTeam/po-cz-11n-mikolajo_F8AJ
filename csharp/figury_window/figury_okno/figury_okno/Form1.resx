<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>